// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dv.proto

package dv

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ffbd8f2c7d11941, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Kickout struct {
	// which device to be kickout
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Kickout) Reset()         { *m = Kickout{} }
func (m *Kickout) String() string { return proto.CompactTextString(m) }
func (*Kickout) ProtoMessage()    {}
func (*Kickout) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ffbd8f2c7d11941, []int{1}
}

func (m *Kickout) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Kickout.Unmarshal(m, b)
}
func (m *Kickout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Kickout.Marshal(b, m, deterministic)
}
func (m *Kickout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Kickout.Merge(m, src)
}
func (m *Kickout) XXX_Size() int {
	return xxx_messageInfo_Kickout.Size(m)
}
func (m *Kickout) XXX_DiscardUnknown() {
	xxx_messageInfo_Kickout.DiscardUnknown(m)
}

var xxx_messageInfo_Kickout proto.InternalMessageInfo

func (m *Kickout) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type CfgChangeNotify struct {
	// which device's cfg has changed
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// the bandwidth limit changed
	KbPerSecond          uint64   `protobuf:"varint,2,opt,name=kb_per_second,json=kbPerSecond,proto3" json:"kb_per_second,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CfgChangeNotify) Reset()         { *m = CfgChangeNotify{} }
func (m *CfgChangeNotify) String() string { return proto.CompactTextString(m) }
func (*CfgChangeNotify) ProtoMessage()    {}
func (*CfgChangeNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ffbd8f2c7d11941, []int{2}
}

func (m *CfgChangeNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfgChangeNotify.Unmarshal(m, b)
}
func (m *CfgChangeNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfgChangeNotify.Marshal(b, m, deterministic)
}
func (m *CfgChangeNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfgChangeNotify.Merge(m, src)
}
func (m *CfgChangeNotify) XXX_Size() int {
	return xxx_messageInfo_CfgChangeNotify.Size(m)
}
func (m *CfgChangeNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_CfgChangeNotify.DiscardUnknown(m)
}

var xxx_messageInfo_CfgChangeNotify proto.InternalMessageInfo

func (m *CfgChangeNotify) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *CfgChangeNotify) GetKbPerSecond() uint64 {
	if m != nil {
		return m.KbPerSecond
	}
	return 0
}

func init() {
	proto.RegisterType((*Empty)(nil), "Empty")
	proto.RegisterType((*Kickout)(nil), "Kickout")
	proto.RegisterType((*CfgChangeNotify)(nil), "CfgChangeNotify")
}

func init() { proto.RegisterFile("dv.proto", fileDescriptor_9ffbd8f2c7d11941) }

var fileDescriptor_9ffbd8f2c7d11941 = []byte{
	// 178 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x48, 0x29, 0xd3, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x57, 0x62, 0xe7, 0x62, 0x75, 0xcd, 0x2d, 0x28, 0xa9, 0x54, 0x92, 0xe5,
	0x62, 0xf7, 0xce, 0x4c, 0xce, 0xce, 0x2f, 0x2d, 0x11, 0x12, 0xe2, 0x62, 0x29, 0x2d, 0xcd, 0x4c,
	0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x95, 0x3c, 0xb9, 0xf8, 0x9d, 0xd3, 0xd2,
	0x9d, 0x33, 0x12, 0xf3, 0xd2, 0x53, 0xfd, 0xf2, 0x4b, 0x32, 0xd3, 0x2a, 0xb1, 0x29, 0x13, 0x52,
	0xe2, 0xe2, 0xcd, 0x4e, 0x8a, 0x2f, 0x48, 0x2d, 0x8a, 0x2f, 0x4e, 0x4d, 0xce, 0xcf, 0x4b, 0x91,
	0x60, 0x52, 0x60, 0xd4, 0x60, 0x09, 0xe2, 0xce, 0x4e, 0x0a, 0x48, 0x2d, 0x0a, 0x06, 0x0b, 0x19,
	0x45, 0x73, 0x71, 0xb8, 0x94, 0xb9, 0x56, 0x14, 0xe4, 0x17, 0x95, 0x08, 0x29, 0x72, 0x71, 0x43,
	0x6d, 0x0d, 0x05, 0x69, 0xe7, 0xd0, 0x83, 0xf2, 0xa4, 0xd8, 0xf4, 0x20, 0xce, 0x62, 0x10, 0xd2,
	0xe1, 0xe2, 0x03, 0xc9, 0xc1, 0x6d, 0x4f, 0x11, 0x12, 0xd0, 0x43, 0x73, 0x0a, 0x42, 0x75, 0x12,
	0x1b, 0xd8, 0x5b, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4a, 0x30, 0x4d, 0xcb, 0xe2, 0x00,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DvExportClient is the client API for DvExport service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DvExportClient interface {
	KickoutUuid(ctx context.Context, in *Kickout, opts ...grpc.CallOption) (*Empty, error)
	UuidCfgChanged(ctx context.Context, in *CfgChangeNotify, opts ...grpc.CallOption) (*Empty, error)
}

type dvExportClient struct {
	cc *grpc.ClientConn
}

func NewDvExportClient(cc *grpc.ClientConn) DvExportClient {
	return &dvExportClient{cc}
}

func (c *dvExportClient) KickoutUuid(ctx context.Context, in *Kickout, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/DvExport/KickoutUuid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dvExportClient) UuidCfgChanged(ctx context.Context, in *CfgChangeNotify, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/DvExport/UuidCfgChanged", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DvExportServer is the server API for DvExport service.
type DvExportServer interface {
	KickoutUuid(context.Context, *Kickout) (*Empty, error)
	UuidCfgChanged(context.Context, *CfgChangeNotify) (*Empty, error)
}

// UnimplementedDvExportServer can be embedded to have forward compatible implementations.
type UnimplementedDvExportServer struct {
}

func (*UnimplementedDvExportServer) KickoutUuid(ctx context.Context, req *Kickout) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KickoutUuid not implemented")
}
func (*UnimplementedDvExportServer) UuidCfgChanged(ctx context.Context, req *CfgChangeNotify) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UuidCfgChanged not implemented")
}

func RegisterDvExportServer(s *grpc.Server, srv DvExportServer) {
	s.RegisterService(&_DvExport_serviceDesc, srv)
}

func _DvExport_KickoutUuid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Kickout)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DvExportServer).KickoutUuid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DvExport/KickoutUuid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DvExportServer).KickoutUuid(ctx, req.(*Kickout))
	}
	return interceptor(ctx, in, info, handler)
}

func _DvExport_UuidCfgChanged_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CfgChangeNotify)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DvExportServer).UuidCfgChanged(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DvExport/UuidCfgChanged",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DvExportServer).UuidCfgChanged(ctx, req.(*CfgChangeNotify))
	}
	return interceptor(ctx, in, info, handler)
}

var _DvExport_serviceDesc = grpc.ServiceDesc{
	ServiceName: "DvExport",
	HandlerType: (*DvExportServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "KickoutUuid",
			Handler:    _DvExport_KickoutUuid_Handler,
		},
		{
			MethodName: "UuidCfgChanged",
			Handler:    _DvExport_UuidCfgChanged_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dv.proto",
}
